<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <!--PropertiesUtil 引入属性配置文件  org.springframework.beans.factory.config.PropertyPlaceholderConfigurer-->
	<bean class="com.sunyard.sunfintech.core.util.PropertiesUtil">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
				<value>classpath:config/system.properties</value>
			</list>
		</property>
		<property name="properties">
			<props>
				<!-- dubbo个性化配置(服务名,端口) -->
				<prop key="dubbo.application.name">ftdm-service-platform</prop>
				<prop key="dubbo.protocol.port">18087</prop>
			</props>
		</property>
		<property name="decryptProperties">
			<array>
				<!-- 需要解密的配置 -->
				<value>db.reader.password</value>
				<value>db.writer.password</value>
			</array>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	<!-- 扫描注解 -->
	<context:component-scan base-package="com.sunyard.sunfintech">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- dubbo url示例：url="dubbo://172.16.10.212:18080/"-->

	<!--			18081			-->
	<dubbo:reference id="accountQueryService" interface="com.sunyard.sunfintech.account.provider.IAccountQueryService" check="false" />
	<dubbo:reference id="accountTransferService" interface="com.sunyard.sunfintech.account.provider.IAccountTransferService" check="false" />
	<dubbo:reference id="accountFrozenService" interface="com.sunyard.sunfintech.account.provider.IAccountFrozenService" check="false"/>
	<dubbo:reference id="accountAssetService" interface="com.sunyard.sunfintech.account.provider.IAccountAssetService" check="false" />

	<!--			18083			-->
	<dubbo:reference id="transReqService" interface="com.sunyard.sunfintech.pub.provider.ITransReqService" check="false" />
	<dubbo:reference id="sysParameterService" interface="com.sunyard.sunfintech.pub.provider.ISysParameterService" check="false" />


	<!--			18084			-->
	<dubbo:reference id="bankTranserService" interface="com.sunyard.sunfintech.thirdparty.provider.IBankTranserService" check="false" />
	<dubbo:reference id="platCacheService" interface="com.sunyard.sunfintech.thirdparty.provider.IPlatCacheService" check="false" />
	<dubbo:reference id="sendMsgService" interface="com.sunyard.sunfintech.thirdparty.provider.ISendMsgService" check="false" />
	<dubbo:reference id="accountSearchService" interface="com.sunyard.sunfintech.thirdparty.provider.IAccountSearchService" check="false" />


	<!-- 引入SPRING配置文件 -->
	<!-- <import resource="spring/mq.xml"/> -->
	<import resource="classpath*:spring/dubbo.xml" />
	<import resource="classpath*:spring/redis.xml"/>
	<import resource="classpath*:spring/mybatis.xml"/>
	<import resource="classpath*:spring/data-source.xml"/>
	<!-- <import resource="scheduler.xml"/> -->
	<!-- <import resource="mq-listener.xml"/>
	<import resource="mq-sender.xml"/> -->
</beans>