<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunyard.sunfintech.custdao.mapper.CustClearResultMapper">
    <resultMap id="BaseResultMap" type="com.sunyard.sunfintech.dao.entity.ClearResult">
        <id column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="plat_no" jdbcType="VARCHAR" property="plat_no"/>
        <result column="pay_code" jdbcType="VARCHAR" property="pay_code"/>
        <result column="clear_date" jdbcType="DATE" property="clear_date"/>
        <result column="recharge_sum_inside" jdbcType="DECIMAL" property="recharge_sum_inside"/>
        <result column="recharge_sum_outside" jdbcType="DECIMAL" property="recharge_sum_outside"/>
        <result column="recharge_count_inside" jdbcType="INTEGER" property="recharge_count_inside"/>
        <result column="recharge_count_outside" jdbcType="INTEGER" property="recharge_count_outside"/>
        <result column="withdrawals_sum_inside" jdbcType="DECIMAL" property="withdrawals_sum_inside"/>
        <result column="withdrawals_sum_outside" jdbcType="DECIMAL" property="withdrawals_sum_outside"/>
        <result column="withdrawals_count_inside" jdbcType="INTEGER" property="withdrawals_count_inside"/>
        <result column="withdrawals_count_outside" jdbcType="INTEGER" property="withdrawals_count_outside"/>
        <result column="withdrawals_fail_count" jdbcType="INTEGER" property="withdrawals_fail_count"/>
        <result column="withdrawals_fail_sum" jdbcType="DECIMAL" property="withdrawals_fail_sum"/>
        <result column="withdrawals_wait_count" jdbcType="INTEGER" property="withdrawals_wait_count"/>
        <result column="withdrawals_wait_sum" jdbcType="DECIMAL" property="withdrawals_wait_sum"/>
        <result column="clear_status" jdbcType="CHAR" property="clear_status"/>
        <result column="clear_recordtime" jdbcType="VARCHAR" property="clear_recordtime"/>
        <result column="liquidation" jdbcType="CHAR" property="liquidation"/>
        <result column="liquidation_recordtime" jdbcType="VARCHAR" property="liquidation_recordtime"/>
        <result column="wait_clear_sum" jdbcType="DECIMAL" property="wait_clear_sum"/>
        <result column="clear_sum" jdbcType="DECIMAL" property="clear_sum"/>
        <result column="balance_sum" jdbcType="DECIMAL" property="balance_sum"/>
        <result column="bank_withdrawals" jdbcType="DECIMAL" property="bank_withdrawals"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    pid, plat_no, pay_code, clear_date, recharge_sum_inside, recharge_sum_outside, recharge_count_inside, 
    recharge_count_outside, withdrawals_sum_inside, withdrawals_sum_outside, withdrawals_count_inside, 
    withdrawals_count_outside, withdrawals_fail_count, withdrawals_fail_sum, withdrawals_wait_count, 
    withdrawals_wait_sum, clear_status, clear_recordtime, liquidation, liquidation_recordtime, 
    wait_clear_sum, clear_sum, balance_sum, bank_withdrawals
  </sql>
    <select id="selectByExample" parameterType="com.sunyard.sunfintech.dao.entity.ClearResultExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from clear_result
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from clear_result
        where pid = #{pid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from clear_result
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.sunyard.sunfintech.dao.entity.ClearResultExample">
        delete from clear_result
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.sunyard.sunfintech.dao.entity.ClearResult">
    insert into clear_result (pid, plat_no, pay_code, 
      clear_date, recharge_sum_inside, recharge_sum_outside, 
      recharge_count_inside, recharge_count_outside, 
      withdrawals_sum_inside, withdrawals_sum_outside, 
      withdrawals_count_inside, withdrawals_count_outside, 
      withdrawals_fail_count, withdrawals_fail_sum, 
      withdrawals_wait_count, withdrawals_wait_sum, 
      clear_status, clear_recordtime, liquidation, 
      liquidation_recordtime, wait_clear_sum, 
      clear_sum, balance_sum, bank_withdrawals
      )
    values (#{pid,jdbcType=INTEGER}, #{plat_no,jdbcType=VARCHAR}, #{pay_code,jdbcType=VARCHAR}, 
      #{clear_date,jdbcType=DATE}, #{recharge_sum_inside,jdbcType=DECIMAL}, #{recharge_sum_outside,jdbcType=DECIMAL}, 
      #{recharge_count_inside,jdbcType=INTEGER}, #{recharge_count_outside,jdbcType=INTEGER}, 
      #{withdrawals_sum_inside,jdbcType=DECIMAL}, #{withdrawals_sum_outside,jdbcType=DECIMAL}, 
      #{withdrawals_count_inside,jdbcType=INTEGER}, #{withdrawals_count_outside,jdbcType=INTEGER}, 
      #{withdrawals_fail_count,jdbcType=INTEGER}, #{withdrawals_fail_sum,jdbcType=DECIMAL}, 
      #{withdrawals_wait_count,jdbcType=INTEGER}, #{withdrawals_wait_sum,jdbcType=DECIMAL}, 
      #{clear_status,jdbcType=CHAR}, #{clear_recordtime,jdbcType=VARCHAR}, #{liquidation,jdbcType=CHAR}, 
      #{liquidation_recordtime,jdbcType=VARCHAR}, #{wait_clear_sum,jdbcType=DECIMAL}, 
      #{clear_sum,jdbcType=DECIMAL}, #{balance_sum,jdbcType=DECIMAL}, #{bank_withdrawals,jdbcType=DECIMAL}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.sunyard.sunfintech.dao.entity.ClearResult">
        insert into clear_result
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                pid,
            </if>
            <if test="plat_no != null">
                plat_no,
            </if>
            <if test="pay_code != null">
                pay_code,
            </if>
            <if test="clear_date != null">
                clear_date,
            </if>
            <if test="recharge_sum_inside != null">
                recharge_sum_inside,
            </if>
            <if test="recharge_sum_outside != null">
                recharge_sum_outside,
            </if>
            <if test="recharge_count_inside != null">
                recharge_count_inside,
            </if>
            <if test="recharge_count_outside != null">
                recharge_count_outside,
            </if>
            <if test="withdrawals_sum_inside != null">
                withdrawals_sum_inside,
            </if>
            <if test="withdrawals_sum_outside != null">
                withdrawals_sum_outside,
            </if>
            <if test="withdrawals_count_inside != null">
                withdrawals_count_inside,
            </if>
            <if test="withdrawals_count_outside != null">
                withdrawals_count_outside,
            </if>
            <if test="withdrawals_fail_count != null">
                withdrawals_fail_count,
            </if>
            <if test="withdrawals_fail_sum != null">
                withdrawals_fail_sum,
            </if>
            <if test="withdrawals_wait_count != null">
                withdrawals_wait_count,
            </if>
            <if test="withdrawals_wait_sum != null">
                withdrawals_wait_sum,
            </if>
            <if test="clear_status != null">
                clear_status,
            </if>
            <if test="clear_recordtime != null">
                clear_recordtime,
            </if>
            <if test="liquidation != null">
                liquidation,
            </if>
            <if test="liquidation_recordtime != null">
                liquidation_recordtime,
            </if>
            <if test="wait_clear_sum != null">
                wait_clear_sum,
            </if>
            <if test="clear_sum != null">
                clear_sum,
            </if>
            <if test="balance_sum != null">
                balance_sum,
            </if>
            <if test="bank_withdrawals != null">
                bank_withdrawals,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="plat_no != null">
                #{plat_no,jdbcType=VARCHAR},
            </if>
            <if test="pay_code != null">
                #{pay_code,jdbcType=VARCHAR},
            </if>
            <if test="clear_date != null">
                #{clear_date,jdbcType=DATE},
            </if>
            <if test="recharge_sum_inside != null">
                #{recharge_sum_inside,jdbcType=DECIMAL},
            </if>
            <if test="recharge_sum_outside != null">
                #{recharge_sum_outside,jdbcType=DECIMAL},
            </if>
            <if test="recharge_count_inside != null">
                #{recharge_count_inside,jdbcType=INTEGER},
            </if>
            <if test="recharge_count_outside != null">
                #{recharge_count_outside,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_sum_inside != null">
                #{withdrawals_sum_inside,jdbcType=DECIMAL},
            </if>
            <if test="withdrawals_sum_outside != null">
                #{withdrawals_sum_outside,jdbcType=DECIMAL},
            </if>
            <if test="withdrawals_count_inside != null">
                #{withdrawals_count_inside,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_count_outside != null">
                #{withdrawals_count_outside,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_fail_count != null">
                #{withdrawals_fail_count,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_fail_sum != null">
                #{withdrawals_fail_sum,jdbcType=DECIMAL},
            </if>
            <if test="withdrawals_wait_count != null">
                #{withdrawals_wait_count,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_wait_sum != null">
                #{withdrawals_wait_sum,jdbcType=DECIMAL},
            </if>
            <if test="clear_status != null">
                #{clear_status,jdbcType=CHAR},
            </if>
            <if test="clear_recordtime != null">
                #{clear_recordtime,jdbcType=VARCHAR},
            </if>
            <if test="liquidation != null">
                #{liquidation,jdbcType=CHAR},
            </if>
            <if test="liquidation_recordtime != null">
                #{liquidation_recordtime,jdbcType=VARCHAR},
            </if>
            <if test="wait_clear_sum != null">
                #{wait_clear_sum,jdbcType=DECIMAL},
            </if>
            <if test="clear_sum != null">
                #{clear_sum,jdbcType=DECIMAL},
            </if>
            <if test="balance_sum != null">
                #{balance_sum,jdbcType=DECIMAL},
            </if>
            <if test="bank_withdrawals != null">
                #{bank_withdrawals,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sunyard.sunfintech.dao.entity.ClearResultExample"
            resultType="java.lang.Integer">
        select count(*) from clear_result
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update clear_result
        <set>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=INTEGER},
            </if>
            <if test="record.plat_no != null">
                plat_no = #{record.plat_no,jdbcType=VARCHAR},
            </if>
            <if test="record.pay_code != null">
                pay_code = #{record.pay_code,jdbcType=VARCHAR},
            </if>
            <if test="record.clear_date != null">
                clear_date = #{record.clear_date,jdbcType=DATE},
            </if>
            <if test="record.recharge_sum_inside != null">
                recharge_sum_inside = #{record.recharge_sum_inside,jdbcType=DECIMAL},
            </if>
            <if test="record.recharge_sum_outside != null">
                recharge_sum_outside = #{record.recharge_sum_outside,jdbcType=DECIMAL},
            </if>
            <if test="record.recharge_count_inside != null">
                recharge_count_inside = #{record.recharge_count_inside,jdbcType=INTEGER},
            </if>
            <if test="record.recharge_count_outside != null">
                recharge_count_outside = #{record.recharge_count_outside,jdbcType=INTEGER},
            </if>
            <if test="record.withdrawals_sum_inside != null">
                withdrawals_sum_inside = #{record.withdrawals_sum_inside,jdbcType=DECIMAL},
            </if>
            <if test="record.withdrawals_sum_outside != null">
                withdrawals_sum_outside = #{record.withdrawals_sum_outside,jdbcType=DECIMAL},
            </if>
            <if test="record.withdrawals_count_inside != null">
                withdrawals_count_inside = #{record.withdrawals_count_inside,jdbcType=INTEGER},
            </if>
            <if test="record.withdrawals_count_outside != null">
                withdrawals_count_outside = #{record.withdrawals_count_outside,jdbcType=INTEGER},
            </if>
            <if test="record.withdrawals_fail_count != null">
                withdrawals_fail_count = #{record.withdrawals_fail_count,jdbcType=INTEGER},
            </if>
            <if test="record.withdrawals_fail_sum != null">
                withdrawals_fail_sum = #{record.withdrawals_fail_sum,jdbcType=DECIMAL},
            </if>
            <if test="record.withdrawals_wait_count != null">
                withdrawals_wait_count = #{record.withdrawals_wait_count,jdbcType=INTEGER},
            </if>
            <if test="record.withdrawals_wait_sum != null">
                withdrawals_wait_sum = #{record.withdrawals_wait_sum,jdbcType=DECIMAL},
            </if>
            <if test="record.clear_status != null">
                clear_status = #{record.clear_status,jdbcType=CHAR},
            </if>
            <if test="record.clear_recordtime != null">
                clear_recordtime = #{record.clear_recordtime,jdbcType=VARCHAR},
            </if>
            <if test="record.liquidation != null">
                liquidation = #{record.liquidation,jdbcType=CHAR},
            </if>
            <if test="record.liquidation_recordtime != null">
                liquidation_recordtime = #{record.liquidation_recordtime,jdbcType=VARCHAR},
            </if>
            <if test="record.wait_clear_sum != null">
                wait_clear_sum = #{record.wait_clear_sum,jdbcType=DECIMAL},
            </if>
            <if test="record.clear_sum != null">
                clear_sum = #{record.clear_sum,jdbcType=DECIMAL},
            </if>
            <if test="record.balance_sum != null">
                balance_sum = #{record.balance_sum,jdbcType=DECIMAL},
            </if>
            <if test="record.bank_withdrawals != null">
                bank_withdrawals = #{record.bank_withdrawals,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update clear_result
        set pid = #{record.pid,jdbcType=INTEGER},
        plat_no = #{record.plat_no,jdbcType=VARCHAR},
        pay_code = #{record.pay_code,jdbcType=VARCHAR},
        clear_date = #{record.clear_date,jdbcType=DATE},
        recharge_sum_inside = #{record.recharge_sum_inside,jdbcType=DECIMAL},
        recharge_sum_outside = #{record.recharge_sum_outside,jdbcType=DECIMAL},
        recharge_count_inside = #{record.recharge_count_inside,jdbcType=INTEGER},
        recharge_count_outside = #{record.recharge_count_outside,jdbcType=INTEGER},
        withdrawals_sum_inside = #{record.withdrawals_sum_inside,jdbcType=DECIMAL},
        withdrawals_sum_outside = #{record.withdrawals_sum_outside,jdbcType=DECIMAL},
        withdrawals_count_inside = #{record.withdrawals_count_inside,jdbcType=INTEGER},
        withdrawals_count_outside = #{record.withdrawals_count_outside,jdbcType=INTEGER},
        withdrawals_fail_count = #{record.withdrawals_fail_count,jdbcType=INTEGER},
        withdrawals_fail_sum = #{record.withdrawals_fail_sum,jdbcType=DECIMAL},
        withdrawals_wait_count = #{record.withdrawals_wait_count,jdbcType=INTEGER},
        withdrawals_wait_sum = #{record.withdrawals_wait_sum,jdbcType=DECIMAL},
        clear_status = #{record.clear_status,jdbcType=CHAR},
        clear_recordtime = #{record.clear_recordtime,jdbcType=VARCHAR},
        liquidation = #{record.liquidation,jdbcType=CHAR},
        liquidation_recordtime = #{record.liquidation_recordtime,jdbcType=VARCHAR},
        wait_clear_sum = #{record.wait_clear_sum,jdbcType=DECIMAL},
        clear_sum = #{record.clear_sum,jdbcType=DECIMAL},
        balance_sum = #{record.balance_sum,jdbcType=DECIMAL},
        bank_withdrawals = #{record.bank_withdrawals,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sunyard.sunfintech.dao.entity.ClearResult">
        update clear_result
        <set>
            <if test="plat_no != null">
                plat_no = #{plat_no,jdbcType=VARCHAR},
            </if>
            <if test="pay_code != null">
                pay_code = #{pay_code,jdbcType=VARCHAR},
            </if>
            <if test="clear_date != null">
                clear_date = #{clear_date,jdbcType=DATE},
            </if>
            <if test="recharge_sum_inside != null">
                recharge_sum_inside = #{recharge_sum_inside,jdbcType=DECIMAL},
            </if>
            <if test="recharge_sum_outside != null">
                recharge_sum_outside = #{recharge_sum_outside,jdbcType=DECIMAL},
            </if>
            <if test="recharge_count_inside != null">
                recharge_count_inside = #{recharge_count_inside,jdbcType=INTEGER},
            </if>
            <if test="recharge_count_outside != null">
                recharge_count_outside = #{recharge_count_outside,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_sum_inside != null">
                withdrawals_sum_inside = #{withdrawals_sum_inside,jdbcType=DECIMAL},
            </if>
            <if test="withdrawals_sum_outside != null">
                withdrawals_sum_outside = #{withdrawals_sum_outside,jdbcType=DECIMAL},
            </if>
            <if test="withdrawals_count_inside != null">
                withdrawals_count_inside = #{withdrawals_count_inside,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_count_outside != null">
                withdrawals_count_outside = #{withdrawals_count_outside,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_fail_count != null">
                withdrawals_fail_count = #{withdrawals_fail_count,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_fail_sum != null">
                withdrawals_fail_sum = #{withdrawals_fail_sum,jdbcType=DECIMAL},
            </if>
            <if test="withdrawals_wait_count != null">
                withdrawals_wait_count = #{withdrawals_wait_count,jdbcType=INTEGER},
            </if>
            <if test="withdrawals_wait_sum != null">
                withdrawals_wait_sum = #{withdrawals_wait_sum,jdbcType=DECIMAL},
            </if>
            <if test="clear_status != null">
                clear_status = #{clear_status,jdbcType=CHAR},
            </if>
            <if test="clear_recordtime != null">
                clear_recordtime = #{clear_recordtime,jdbcType=VARCHAR},
            </if>
            <if test="liquidation != null">
                liquidation = #{liquidation,jdbcType=CHAR},
            </if>
            <if test="liquidation_recordtime != null">
                liquidation_recordtime = #{liquidation_recordtime,jdbcType=VARCHAR},
            </if>
            <if test="wait_clear_sum != null">
                wait_clear_sum = #{wait_clear_sum,jdbcType=DECIMAL},
            </if>
            <if test="clear_sum != null">
                clear_sum = #{clear_sum,jdbcType=DECIMAL},
            </if>
            <if test="balance_sum != null">
                balance_sum = #{balance_sum,jdbcType=DECIMAL},
            </if>
            <if test="bank_withdrawals != null">
                bank_withdrawals = #{bank_withdrawals,jdbcType=DECIMAL},
            </if>
        </set>
        where pid = #{pid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sunyard.sunfintech.dao.entity.ClearResult">
    update clear_result
    set plat_no = #{plat_no,jdbcType=VARCHAR},
      pay_code = #{pay_code,jdbcType=VARCHAR},
      clear_date = #{clear_date,jdbcType=DATE},
      recharge_sum_inside = #{recharge_sum_inside,jdbcType=DECIMAL},
      recharge_sum_outside = #{recharge_sum_outside,jdbcType=DECIMAL},
      recharge_count_inside = #{recharge_count_inside,jdbcType=INTEGER},
      recharge_count_outside = #{recharge_count_outside,jdbcType=INTEGER},
      withdrawals_sum_inside = #{withdrawals_sum_inside,jdbcType=DECIMAL},
      withdrawals_sum_outside = #{withdrawals_sum_outside,jdbcType=DECIMAL},
      withdrawals_count_inside = #{withdrawals_count_inside,jdbcType=INTEGER},
      withdrawals_count_outside = #{withdrawals_count_outside,jdbcType=INTEGER},
      withdrawals_fail_count = #{withdrawals_fail_count,jdbcType=INTEGER},
      withdrawals_fail_sum = #{withdrawals_fail_sum,jdbcType=DECIMAL},
      withdrawals_wait_count = #{withdrawals_wait_count,jdbcType=INTEGER},
      withdrawals_wait_sum = #{withdrawals_wait_sum,jdbcType=DECIMAL},
      clear_status = #{clear_status,jdbcType=CHAR},
      clear_recordtime = #{clear_recordtime,jdbcType=VARCHAR},
      liquidation = #{liquidation,jdbcType=CHAR},
      liquidation_recordtime = #{liquidation_recordtime,jdbcType=VARCHAR},
      wait_clear_sum = #{wait_clear_sum,jdbcType=DECIMAL},
      clear_sum = #{clear_sum,jdbcType=DECIMAL},
      balance_sum = #{balance_sum,jdbcType=DECIMAL},
      bank_withdrawals = #{bank_withdrawals,jdbcType=DECIMAL}
    where pid = #{pid,jdbcType=INTEGER}
  </update>

    <insert id="insertResult" parameterType="com.sunyard.sunfintech.dao.entity.ClearResult">
        INSERT INTO clear_result(
        plat_no,pay_code,clear_date,
        recharge_sum_inside,recharge_count_inside,
        withdrawals_sum_inside,withdrawals_count_inside,
        withdrawals_wait_sum,withdrawals_wait_count,
        withdrawals_fail_sum,withdrawals_fail_count
        )values (#{plat_no},#{pay_code},#{clear_date},#{recharge_sum_inside},#{recharge_count_inside},
        #{withdrawals_sum_inside},#{withdrawals_count_inside},#{withdrawals_wait_sum},#{withdrawals_wait_count},#{withdrawals_fail_sum}
        ,#{withdrawals_fail_count})
    </insert>

    <select id="selectClearResult" parameterType="map" resultMap="BaseResultMap">
        SELECT p.plat_no,p.pay_code,
        IFNULL(recharge_sum_inside,0) AS recharge_sum_inside,IFNULL(recharge_count_inside,0) AS recharge_count_inside,
        IFNULL(withdrawals_sum_inside,0) AS withdrawals_sum_inside,IFNULL(withdrawals_count_inside,0) AS withdrawals_count_inside,
        IFNULL(withdrawals_wait_sum,0) AS withdrawals_wait_sum,IFNULL(withdrawals_wait_count,0) AS withdrawals_wait_count,
        IFNULL(withdrawals_fail_sum,0) AS withdrawals_fail_sum,IFNULL(withdrawals_fail_count,0) AS withdrawals_fail_count
        FROM plat_paycode p
         LEFT JOIN
        (SELECT  r.plat_no,r.pay_code,
        SUM(trans_amt) AS recharge_sum_inside,
        COUNT(1) AS recharge_count_inside
        FROM eacc_accountamtlist e
        LEFT JOIN rw_recharge r
        ON e.trans_serial = r.trans_serial
        WHERE r.plat_no=#{plat_no} AND r.trans_code IN ('C00001','C00002','C00003','C00011','CK0001','C00005')
        AND DATE_FORMAT(e.account_date,'%Y%m%d') = #{clear_date}
        AND (r.self_bank_flag != '0' OR r.self_bank_flag IS NULL)
        GROUP BY r.plat_no,r.pay_code
        )a
        ON p.plat_no = a.plat_no AND p.pay_code = a.pay_code
        LEFT JOIN
        (SELECT  r.plat_no,r.pay_code,
        SUM(out_amt) AS withdrawals_sum_inside,
        COUNT(1) AS withdrawals_count_inside
        FROM rw_withdraw r
        WHERE
         r.pay_status = '20' AND r.plat_no=#{plat_no}
        AND r.trans_code IN ('W00001','P00004','W10001')
       AND EXISTS (SELECT r.trans_serial FROM eacc_accountamtlist e
       WHERE r.trans_serial=e.trans_serial AND DATE_FORMAT(e.account_date,'%Y%m%d') = #{clear_date})
        GROUP BY r.plat_no,r.pay_code
        )b
        ON b.plat_no = p.plat_no AND b.pay_code = p.pay_code
        LEFT JOIN
        (SELECT plat_no,pay_code,
        SUM(out_amt) AS withdrawals_wait_sum,
        COUNT(1) AS withdrawals_wait_count
        FROM rw_withdraw
        WHERE plat_no=#{plat_no} AND trans_code IN ('W00001','P00004','W10001')
        AND pay_status = '24' AND DATE_FORMAT(finish_time,'%Y%m%d') = #{clear_date}
        GROUP BY plat_no,pay_code
        )c
        ON p.plat_no = c.plat_no AND p.pay_code = c.pay_code
        LEFT JOIN
        (SELECT plat_no,pay_code,
        SUM(out_amt) AS withdrawals_fail_sum,
        COUNT(1) AS withdrawals_fail_count
        FROM rw_withdraw
        WHERE plat_no=#{plat_no} AND trans_code IN ('W00001','P00004','W10001')
        AND pay_status = '21' AND DATE_FORMAT(finish_time,'%Y%m%d') = #{clear_date}
        GROUP BY plat_no,pay_code
        )d
        ON d.plat_no = p.plat_no AND d.pay_code = p.pay_code
        WHERE p.pay_code IS NOT NULL AND p.pay_code != '' AND p.plat_no = #{plat_no} AND is_transaction = '1'
        GROUP BY plat_no,pay_code
    </select>

    <select id="selectPlatBalance" parameterType="map" resultType="map">
    SELECT p.plat_no,#{clear_date} clear_date,IFNULL((SELECT SUM(a.n_balance) balance_sum FROM account_subject_info a WHERE SUBJECT = '01' AND p.plat_no = a.plat_no
    GROUP BY a.plat_no), 0) balance_sum FROM plat_platinfo p
  </select>

    <select id="selectBankBalance" parameterType="map" resultType="map">
    SELECT pc.balance_date AS clear_date,pp.plat_no, pc.balance AS  balance_bank
    FROM plat_cardbalance pc
    LEFT JOIN plat_cardinfo pp ON pp.card_name=pc.plat_name
    WHERE pc.balance_date=#{clear_date}
  </select>

    <insert id="addClearResult" parameterType="map">
      INSERT INTO clear_result(
        plat_no,pay_code,clear_date,
        recharge_sum_inside,recharge_count_inside,
        withdrawals_sum_inside,withdrawals_count_inside,
        withdrawals_wait_sum,withdrawals_wait_count,
        withdrawals_fail_sum,withdrawals_fail_count
        )
        select p.plat_no,p.pay_code,#{clear_date},
        IFNULL(recharge_sum_inside,0),IFNULL(recharge_count_inside,0),
        IFNULL(withdrawals_sum_inside,0),IFNULL(withdrawals_count_inside,0),
        IFNULL(withdrawals_wait_sum,0),IFNULL(withdrawals_wait_count,0),
        IFNULL(withdrawals_fail_sum,0),IFNULL(withdrawals_fail_count,0)
        from plat_paycode p
        left join
        (select  r.plat_no,r.pay_code,
                        SUM(trans_amt) as recharge_sum_inside,
                COUNT(1) as recharge_count_inside
                    from eacc_accountamtlist e
                    left join rw_recharge r
                    on e.trans_serial = r.trans_serial
                    where r.trans_code IN ('C00001','C00002','C00003','C00011','CK0001')
                    and DATE_FORMAT(e.account_date,'%Y%m%d') = #{clear_date}
                    and (r.self_bank_flag != '0' or r.self_bank_flag is null)
                    GROUP BY r.plat_no,r.pay_code
        )a
        on p.plat_no = a.plat_no and p.pay_code = a.pay_code
        left join
        (select  r.plat_no,r.pay_code,
                        SUM(out_amt) as withdrawals_sum_inside,
                        COUNT(1) as withdrawals_count_inside
                        from (select trans_serial,account_date from eacc_accountamtlist group by trans_serial) e
                        left join rw_withdraw r
                        on e.trans_serial = r.trans_serial
                and r.pay_status = '20'
                        where r.trans_code IN ('W00001','P00004','W10001')
                        and DATE_FORMAT(e.account_date,'%Y%m%d') = #{clear_date}
                        GROUP BY r.plat_no,r.pay_code
        )b
        on b.plat_no = p.plat_no and b.pay_code = p.pay_code
        left join
        (select plat_no,pay_code,
                        SUM(out_amt) as withdrawals_wait_sum,
                        COUNT(1) as withdrawals_wait_count
                from rw_withdraw
                where trans_code IN ('W00001','P00004','W10001')
                        and pay_status = '24' and DATE_FORMAT(finish_time,'%Y%m%d') = #{clear_date}
                        GROUP BY plat_no,pay_code
        )c
        on p.plat_no = c.plat_no and p.pay_code = c.pay_code
        left join
        (select plat_no,pay_code,
                        SUM(out_amt) as withdrawals_fail_sum,
                        COUNT(1) as withdrawals_fail_count
                from rw_withdraw
                where trans_code IN ('W00001','P00004','W10001')
                and pay_status = '21' and DATE_FORMAT(finish_time,'%Y%m%d') = #{clear_date}
                        GROUP BY plat_no,pay_code
        )d
        on d.plat_no = p.plat_no and d.pay_code = p.pay_code
        where p.pay_code is not null and p.pay_code != ''
        GROUP BY plat_no,pay_code
  </insert>
    <!-- 查询并锁定该清算流水，防止重复清算-->
    <select id="getByUnionKey" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from clear_result
        where plat_no=#{plat_no}  and clear_date=DATE_FORMAT(#{clear_date},'%Y%m%d')
        for UPDATE
    </select>

    <insert id="addClearInfoMx" parameterType="java.util.Map">
    INSERT INTO
    clear_checkinfo_emx
    (clear_date,plat_no,get_time,send_time,check_time,e_int,e_mat,status,payment_plat_no)
    VALUES(#{clear_date},
    #{plat_no},#{get_time},
    #{send_time},#{check_time},
    #{e_int},#{e_mat},#{status,jdbcType=VARCHAR},#{payment_plat_no})
  </insert>

    <delete id="deleteClearInfoByDate" parameterType="map">
        delete from
        clear_checkinfo_emxlist where clear_date = #{clear_date} and pay_code=#{pay_code} and plat_no=#{plat_no}
    </delete>

    <insert id="addClearInfoLIst" parameterType="java.util.List">
        insert into clear_checkinfo_emxlist
        (clear_date,plat_no,trans_date,serial_no,order_no,amt,charge,order_type,pay_code,tripartite_num,payment_plat_no,payment_pay_code)
        values
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (#{item.clear_date},
            #{item.plat_no},
            #{item.trans_date},
            #{item.serial_no},
            #{item.order_no},
            #{item.amt},
            #{item.charge},
            #{item.order_type},
            #{item.pay_code},
            #{item.tripartite_num},
            #{item.payment_plat_no},
            #{item.payment_pay_code}
            )
        </foreach>
    </insert>
</mapper>