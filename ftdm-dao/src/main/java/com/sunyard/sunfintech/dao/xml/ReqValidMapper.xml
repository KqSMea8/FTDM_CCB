<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunyard.sunfintech.dao.mapper.ReqValidMapper">
  <resultMap id="BaseResultMap" type="com.sunyard.sunfintech.dao.entity.ReqValid">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="plat_no" jdbcType="VARCHAR" property="plat_no" />
    <result column="request_time" jdbcType="TIMESTAMP" property="request_time" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="card_no" jdbcType="VARCHAR" property="card_no" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="order_no" jdbcType="VARCHAR" property="order_no" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="enabled" jdbcType="VARCHAR" property="enabled" />
    <result column="create_by" jdbcType="VARCHAR" property="create_by" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_by" jdbcType="VARCHAR" property="update_by" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sunyard.sunfintech.dao.entity.ReqValidWithBLOBs">
    <result column="exception_info" jdbcType="LONGVARCHAR" property="exception_info" />
    <result column="return_data" jdbcType="LONGVARCHAR" property="return_data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, plat_no, request_time, pid, name, card_no, mobile, result, order_no, remark, 
    enabled, create_by, create_time, update_by, update_time
  </sql>
  <sql id="Blob_Column_List">
    exception_info, return_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sunyard.sunfintech.dao.entity.ReqValidExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from req_valid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sunyard.sunfintech.dao.entity.ReqValidExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from req_valid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from req_valid
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from req_valid
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sunyard.sunfintech.dao.entity.ReqValidExample">
    delete from req_valid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sunyard.sunfintech.dao.entity.ReqValidWithBLOBs">
    insert into req_valid (id, type, plat_no, 
      request_time, pid, name, 
      card_no, mobile, result, 
      order_no, remark, enabled, 
      create_by, create_time, update_by, 
      update_time, exception_info, return_data
      )
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{plat_no,jdbcType=VARCHAR}, 
      #{request_time,jdbcType=TIMESTAMP}, #{pid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{card_no,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{order_no,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{enabled,jdbcType=VARCHAR}, 
      #{create_by,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{update_by,jdbcType=VARCHAR}, 
      #{update_time,jdbcType=TIMESTAMP}, #{exception_info,jdbcType=LONGVARCHAR}, #{return_data,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sunyard.sunfintech.dao.entity.ReqValidWithBLOBs">
    insert into req_valid
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="plat_no != null">
        plat_no,
      </if>
      <if test="request_time != null">
        request_time,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="card_no != null">
        card_no,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="order_no != null">
        order_no,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="create_by != null">
        create_by,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_by != null">
        update_by,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="exception_info != null">
        exception_info,
      </if>
      <if test="return_data != null">
        return_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="plat_no != null">
        #{plat_no,jdbcType=VARCHAR},
      </if>
      <if test="request_time != null">
        #{request_time,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="card_no != null">
        #{card_no,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="order_no != null">
        #{order_no,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="create_by != null">
        #{create_by,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_by != null">
        #{update_by,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="exception_info != null">
        #{exception_info,jdbcType=LONGVARCHAR},
      </if>
      <if test="return_data != null">
        #{return_data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sunyard.sunfintech.dao.entity.ReqValidExample" resultType="java.lang.Integer">
    select count(*) from req_valid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update req_valid
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.plat_no != null">
        plat_no = #{record.plat_no,jdbcType=VARCHAR},
      </if>
      <if test="record.request_time != null">
        request_time = #{record.request_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.card_no != null">
        card_no = #{record.card_no,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.order_no != null">
        order_no = #{record.order_no,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=VARCHAR},
      </if>
      <if test="record.create_by != null">
        create_by = #{record.create_by,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_by != null">
        update_by = #{record.update_by,jdbcType=VARCHAR},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exception_info != null">
        exception_info = #{record.exception_info,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.return_data != null">
        return_data = #{record.return_data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update req_valid
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      plat_no = #{record.plat_no,jdbcType=VARCHAR},
      request_time = #{record.request_time,jdbcType=TIMESTAMP},
      pid = #{record.pid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      card_no = #{record.card_no,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      order_no = #{record.order_no,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=VARCHAR},
      create_by = #{record.create_by,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_by = #{record.update_by,jdbcType=VARCHAR},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      exception_info = #{record.exception_info,jdbcType=LONGVARCHAR},
      return_data = #{record.return_data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update req_valid
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      plat_no = #{record.plat_no,jdbcType=VARCHAR},
      request_time = #{record.request_time,jdbcType=TIMESTAMP},
      pid = #{record.pid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      card_no = #{record.card_no,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      order_no = #{record.order_no,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=VARCHAR},
      create_by = #{record.create_by,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_by = #{record.update_by,jdbcType=VARCHAR},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sunyard.sunfintech.dao.entity.ReqValidWithBLOBs">
    update req_valid
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="plat_no != null">
        plat_no = #{plat_no,jdbcType=VARCHAR},
      </if>
      <if test="request_time != null">
        request_time = #{request_time,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="card_no != null">
        card_no = #{card_no,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="order_no != null">
        order_no = #{order_no,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="create_by != null">
        create_by = #{create_by,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_by != null">
        update_by = #{update_by,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="exception_info != null">
        exception_info = #{exception_info,jdbcType=LONGVARCHAR},
      </if>
      <if test="return_data != null">
        return_data = #{return_data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sunyard.sunfintech.dao.entity.ReqValidWithBLOBs">
    update req_valid
    set type = #{type,jdbcType=VARCHAR},
      plat_no = #{plat_no,jdbcType=VARCHAR},
      request_time = #{request_time,jdbcType=TIMESTAMP},
      pid = #{pid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      card_no = #{card_no,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      order_no = #{order_no,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=VARCHAR},
      create_by = #{create_by,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_by = #{update_by,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      exception_info = #{exception_info,jdbcType=LONGVARCHAR},
      return_data = #{return_data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sunyard.sunfintech.dao.entity.ReqValid">
    update req_valid
    set type = #{type,jdbcType=VARCHAR},
      plat_no = #{plat_no,jdbcType=VARCHAR},
      request_time = #{request_time,jdbcType=TIMESTAMP},
      pid = #{pid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      card_no = #{card_no,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      order_no = #{order_no,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=VARCHAR},
      create_by = #{create_by,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_by = #{update_by,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>