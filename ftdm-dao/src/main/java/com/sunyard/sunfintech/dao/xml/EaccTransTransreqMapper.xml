<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunyard.sunfintech.dao.mapper.EaccTransTransreqMapper">
  <resultMap id="BaseResultMap" type="com.sunyard.sunfintech.dao.entity.EaccTransTransreq">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mall_no" jdbcType="VARCHAR" property="mall_no" />
    <result column="parent_trans_serial" jdbcType="VARCHAR" property="parent_trans_serial" />
    <result column="trans_serial" jdbcType="VARCHAR" property="trans_serial" />
    <result column="eaccount" jdbcType="VARCHAR" property="eaccount" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="property" jdbcType="INTEGER" property="property" />
    <result column="oppo_eaccount" jdbcType="VARCHAR" property="oppo_eaccount" />
    <result column="oppo_name" jdbcType="VARCHAR" property="oppo_name" />
    <result column="oppo_property" jdbcType="INTEGER" property="oppo_property" />
    <result column="trans_amt" jdbcType="DECIMAL" property="trans_amt" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="create_by" jdbcType="VARCHAR" property="create_by" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="update_by" jdbcType="VARCHAR" property="update_by" />
    <result column="ext1" jdbcType="VARCHAR" property="ext1" />
    <result column="ext2" jdbcType="VARCHAR" property="ext2" />
    <result column="ext3" jdbcType="VARCHAR" property="ext3" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sunyard.sunfintech.dao.entity.EaccTransTransreqWithBLOBs">
    <result column="res_params" jdbcType="LONGVARCHAR" property="res_params" />
    <result column="req_params" jdbcType="LONGVARCHAR" property="req_params" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mall_no, parent_trans_serial, trans_serial, eaccount, name, property, oppo_eaccount, 
    oppo_name, oppo_property, trans_amt, status, enabled, remark, create_time, create_by, 
    update_time, update_by, ext1, ext2, ext3
  </sql>
  <sql id="Blob_Column_List">
    res_params, req_params
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreqExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from eacc_trans_transreq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreqExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from eacc_trans_transreq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from eacc_trans_transreq
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eacc_trans_transreq
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreqExample">
    delete from eacc_trans_transreq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreqWithBLOBs">
    insert into eacc_trans_transreq (id, mall_no, parent_trans_serial, 
      trans_serial, eaccount, name, 
      property, oppo_eaccount, oppo_name, 
      oppo_property, trans_amt, status, 
      enabled, remark, create_time, 
      create_by, update_time, update_by, 
      ext1, ext2, ext3, res_params, 
      req_params)
    values (#{id,jdbcType=INTEGER}, #{mall_no,jdbcType=VARCHAR}, #{parent_trans_serial,jdbcType=VARCHAR}, 
      #{trans_serial,jdbcType=VARCHAR}, #{eaccount,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{property,jdbcType=INTEGER}, #{oppo_eaccount,jdbcType=VARCHAR}, #{oppo_name,jdbcType=VARCHAR}, 
      #{oppo_property,jdbcType=INTEGER}, #{trans_amt,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{enabled,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{create_by,jdbcType=VARCHAR}, #{update_time,jdbcType=TIMESTAMP}, #{update_by,jdbcType=VARCHAR}, 
      #{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR}, #{res_params,jdbcType=LONGVARCHAR}, 
      #{req_params,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreqWithBLOBs">
    insert into eacc_trans_transreq
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mall_no != null">
        mall_no,
      </if>
      <if test="parent_trans_serial != null">
        parent_trans_serial,
      </if>
      <if test="trans_serial != null">
        trans_serial,
      </if>
      <if test="eaccount != null">
        eaccount,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="property != null">
        property,
      </if>
      <if test="oppo_eaccount != null">
        oppo_eaccount,
      </if>
      <if test="oppo_name != null">
        oppo_name,
      </if>
      <if test="oppo_property != null">
        oppo_property,
      </if>
      <if test="trans_amt != null">
        trans_amt,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="create_by != null">
        create_by,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="update_by != null">
        update_by,
      </if>
      <if test="ext1 != null">
        ext1,
      </if>
      <if test="ext2 != null">
        ext2,
      </if>
      <if test="ext3 != null">
        ext3,
      </if>
      <if test="res_params != null">
        res_params,
      </if>
      <if test="req_params != null">
        req_params,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mall_no != null">
        #{mall_no,jdbcType=VARCHAR},
      </if>
      <if test="parent_trans_serial != null">
        #{parent_trans_serial,jdbcType=VARCHAR},
      </if>
      <if test="trans_serial != null">
        #{trans_serial,jdbcType=VARCHAR},
      </if>
      <if test="eaccount != null">
        #{eaccount,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="property != null">
        #{property,jdbcType=INTEGER},
      </if>
      <if test="oppo_eaccount != null">
        #{oppo_eaccount,jdbcType=VARCHAR},
      </if>
      <if test="oppo_name != null">
        #{oppo_name,jdbcType=VARCHAR},
      </if>
      <if test="oppo_property != null">
        #{oppo_property,jdbcType=INTEGER},
      </if>
      <if test="trans_amt != null">
        #{trans_amt,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_by != null">
        #{create_by,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_by != null">
        #{update_by,jdbcType=VARCHAR},
      </if>
      <if test="ext1 != null">
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="res_params != null">
        #{res_params,jdbcType=LONGVARCHAR},
      </if>
      <if test="req_params != null">
        #{req_params,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreqExample" resultType="java.lang.Integer">
    select count(*) from eacc_trans_transreq
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eacc_trans_transreq
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mall_no != null">
        mall_no = #{record.mall_no,jdbcType=VARCHAR},
      </if>
      <if test="record.parent_trans_serial != null">
        parent_trans_serial = #{record.parent_trans_serial,jdbcType=VARCHAR},
      </if>
      <if test="record.trans_serial != null">
        trans_serial = #{record.trans_serial,jdbcType=VARCHAR},
      </if>
      <if test="record.eaccount != null">
        eaccount = #{record.eaccount,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.property != null">
        property = #{record.property,jdbcType=INTEGER},
      </if>
      <if test="record.oppo_eaccount != null">
        oppo_eaccount = #{record.oppo_eaccount,jdbcType=VARCHAR},
      </if>
      <if test="record.oppo_name != null">
        oppo_name = #{record.oppo_name,jdbcType=VARCHAR},
      </if>
      <if test="record.oppo_property != null">
        oppo_property = #{record.oppo_property,jdbcType=INTEGER},
      </if>
      <if test="record.trans_amt != null">
        trans_amt = #{record.trans_amt,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.create_by != null">
        create_by = #{record.create_by,jdbcType=VARCHAR},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_by != null">
        update_by = #{record.update_by,jdbcType=VARCHAR},
      </if>
      <if test="record.ext1 != null">
        ext1 = #{record.ext1,jdbcType=VARCHAR},
      </if>
      <if test="record.ext2 != null">
        ext2 = #{record.ext2,jdbcType=VARCHAR},
      </if>
      <if test="record.ext3 != null">
        ext3 = #{record.ext3,jdbcType=VARCHAR},
      </if>
      <if test="record.res_params != null">
        res_params = #{record.res_params,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.req_params != null">
        req_params = #{record.req_params,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update eacc_trans_transreq
    set id = #{record.id,jdbcType=INTEGER},
      mall_no = #{record.mall_no,jdbcType=VARCHAR},
      parent_trans_serial = #{record.parent_trans_serial,jdbcType=VARCHAR},
      trans_serial = #{record.trans_serial,jdbcType=VARCHAR},
      eaccount = #{record.eaccount,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      property = #{record.property,jdbcType=INTEGER},
      oppo_eaccount = #{record.oppo_eaccount,jdbcType=VARCHAR},
      oppo_name = #{record.oppo_name,jdbcType=VARCHAR},
      oppo_property = #{record.oppo_property,jdbcType=INTEGER},
      trans_amt = #{record.trans_amt,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      enabled = #{record.enabled,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      create_by = #{record.create_by,jdbcType=VARCHAR},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      update_by = #{record.update_by,jdbcType=VARCHAR},
      ext1 = #{record.ext1,jdbcType=VARCHAR},
      ext2 = #{record.ext2,jdbcType=VARCHAR},
      ext3 = #{record.ext3,jdbcType=VARCHAR},
      res_params = #{record.res_params,jdbcType=LONGVARCHAR},
      req_params = #{record.req_params,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eacc_trans_transreq
    set id = #{record.id,jdbcType=INTEGER},
      mall_no = #{record.mall_no,jdbcType=VARCHAR},
      parent_trans_serial = #{record.parent_trans_serial,jdbcType=VARCHAR},
      trans_serial = #{record.trans_serial,jdbcType=VARCHAR},
      eaccount = #{record.eaccount,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      property = #{record.property,jdbcType=INTEGER},
      oppo_eaccount = #{record.oppo_eaccount,jdbcType=VARCHAR},
      oppo_name = #{record.oppo_name,jdbcType=VARCHAR},
      oppo_property = #{record.oppo_property,jdbcType=INTEGER},
      trans_amt = #{record.trans_amt,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      enabled = #{record.enabled,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      create_by = #{record.create_by,jdbcType=VARCHAR},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      update_by = #{record.update_by,jdbcType=VARCHAR},
      ext1 = #{record.ext1,jdbcType=VARCHAR},
      ext2 = #{record.ext2,jdbcType=VARCHAR},
      ext3 = #{record.ext3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreqWithBLOBs">
    update eacc_trans_transreq
    <set>
      <if test="mall_no != null">
        mall_no = #{mall_no,jdbcType=VARCHAR},
      </if>
      <if test="parent_trans_serial != null">
        parent_trans_serial = #{parent_trans_serial,jdbcType=VARCHAR},
      </if>
      <if test="trans_serial != null">
        trans_serial = #{trans_serial,jdbcType=VARCHAR},
      </if>
      <if test="eaccount != null">
        eaccount = #{eaccount,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="property != null">
        property = #{property,jdbcType=INTEGER},
      </if>
      <if test="oppo_eaccount != null">
        oppo_eaccount = #{oppo_eaccount,jdbcType=VARCHAR},
      </if>
      <if test="oppo_name != null">
        oppo_name = #{oppo_name,jdbcType=VARCHAR},
      </if>
      <if test="oppo_property != null">
        oppo_property = #{oppo_property,jdbcType=INTEGER},
      </if>
      <if test="trans_amt != null">
        trans_amt = #{trans_amt,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_by != null">
        create_by = #{create_by,jdbcType=VARCHAR},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_by != null">
        update_by = #{update_by,jdbcType=VARCHAR},
      </if>
      <if test="ext1 != null">
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        ext3 = #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="res_params != null">
        res_params = #{res_params,jdbcType=LONGVARCHAR},
      </if>
      <if test="req_params != null">
        req_params = #{req_params,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreqWithBLOBs">
    update eacc_trans_transreq
    set mall_no = #{mall_no,jdbcType=VARCHAR},
      parent_trans_serial = #{parent_trans_serial,jdbcType=VARCHAR},
      trans_serial = #{trans_serial,jdbcType=VARCHAR},
      eaccount = #{eaccount,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      property = #{property,jdbcType=INTEGER},
      oppo_eaccount = #{oppo_eaccount,jdbcType=VARCHAR},
      oppo_name = #{oppo_name,jdbcType=VARCHAR},
      oppo_property = #{oppo_property,jdbcType=INTEGER},
      trans_amt = #{trans_amt,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      create_by = #{create_by,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      update_by = #{update_by,jdbcType=VARCHAR},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      ext3 = #{ext3,jdbcType=VARCHAR},
      res_params = #{res_params,jdbcType=LONGVARCHAR},
      req_params = #{req_params,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sunyard.sunfintech.dao.entity.EaccTransTransreq">
    update eacc_trans_transreq
    set mall_no = #{mall_no,jdbcType=VARCHAR},
      parent_trans_serial = #{parent_trans_serial,jdbcType=VARCHAR},
      trans_serial = #{trans_serial,jdbcType=VARCHAR},
      eaccount = #{eaccount,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      property = #{property,jdbcType=INTEGER},
      oppo_eaccount = #{oppo_eaccount,jdbcType=VARCHAR},
      oppo_name = #{oppo_name,jdbcType=VARCHAR},
      oppo_property = #{oppo_property,jdbcType=INTEGER},
      trans_amt = #{trans_amt,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      create_by = #{create_by,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      update_by = #{update_by,jdbcType=VARCHAR},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      ext3 = #{ext3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>